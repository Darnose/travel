import Head from 'next/head'
import { useEffect, useState } from 'react'

export default function Home() {
	const [login, setLogin] = useState('');
	const [password, setPassword] = useState('');
	const [loginDirty, setloginDirty] = useState(false);
	const [passwordDirty, setpasswordDirty] = useState(false);
	const [loginError, setloginError] = useState('Неправильно введеный логин');
	const [passwordError, setPasswordError] = useState('Пароль не может быть пустым');
	const [formValid, setFormValid] = useState(false);

	useEffect (() => {
		if (loginError || passwordError) {
			setFormValid(false)
		} else {
			setFormValid(true)
		}
	}, [loginError, passwordError])

	const loginHandler: React.ChangeEventHandler<HTMLInputElement> = (e) => {
		setLogin(e.target.value)
		let valid_login = /(?=.*[a-z])(?=.*[A-Z])[a-zA-Z]{5,}/g;

		if (!valid_login.test(e.target.value)){
			setloginError('Логин должен быть написан с большой буквы')
		} else {
			setloginError('')
		}
	}

	const passwordHandler: React.ChangeEventHandler<HTMLInputElement> = (e) => {
		setPassword(e.target.value)
		let valid_password = /(?=.*[0-9])(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*]{8,}/g;

		if (!valid_password.test(e.target.value)){
			setPasswordError('Пароль должен быть больше чем 8 символов')
		} else {
			setPasswordError('')
		}
	}
	
	const blurHandler: React.FocusEventHandler<HTMLInputElement> = (e) => {
		switch (e.target.name) {
			case 'login' :
				setloginDirty(true)
				break
			case 'password' :
				setpasswordDirty(true)
				break
			
		}
	}

	return (
		<>
			<Head>
				<title>Travel</title>
				<meta name="description" content="Generated by create next app"/>
				<meta name="viewport" content="width=device-width, initial-scale=1"/>
				<link rel="icon" href="#"/>
			</Head>
			<main>
				<form action="#" className='authorization'>
					<h1>
						Форма регистрации
					</h1>
					<input onChange={e => loginHandler(e)} value={login.trim()} onBlur={e => blurHandler(e)} type="text" className='authorization__login' placeholder='Введите логин' name='login' />
					{(loginError && loginDirty) && <span className='error__msg'>{loginError}</span>}
					<input onChange={e => passwordHandler(e)} value={password.trim()} onBlur={e => blurHandler(e)} type="text" className='authorization__password' placeholder='Введите пароль' name='password'/>
					{(passwordError && passwordDirty) && <span className='error__msg'>{passwordError}</span>}
					<button disabled={!formValid} type='submit' className='authorization__btn'>
						Вход
					</button>
				</form>
			</main>
		</>
	)
}
